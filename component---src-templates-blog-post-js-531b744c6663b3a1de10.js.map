{"version":3,"file":"component---src-templates-blog-post-js-531b744c6663b3a1de10.js","mappings":"iKAyDA,IA9CYA,KAAO,IAADC,EAAAC,EAAAC,EAChB,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAmBtBC,EAA+B,QAAzBL,EAAGG,EAAKG,KAAKC,oBAAY,IAAAP,OAAA,EAAtBA,EAAwBK,OACjCG,EAASL,SAAY,QAARF,EAAJE,EAAMK,cAAM,IAAAP,GAAiB,QAAjBC,EAAZD,EAAcQ,uBAAe,IAAAP,OAAzB,EAAJA,EAA+BQ,gBAE9C,OACEC,EAAAA,cAAA,OAAKC,UAAU,OACZJ,GACCG,EAAAA,cAACE,EAAAA,EAAW,CACVC,MAAON,EACPO,KAAKV,aAAM,EAANA,EAAQW,OAAS,GACtBJ,UAAU,aACVK,SAAU,CACRC,aAAe,UAIpBb,aAAM,EAANA,EAAQW,OACPL,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAA,UACGN,aAAM,EAANA,EAAQc,UAAW,OAItB,C,oFCmBV,UAjEyBC,IAAyB,IAADpB,EAAA,IAAvB,KAAEG,EAAI,SAAEkB,GAAUD,EAC1C,MAAME,EAAOnB,EAAKoB,eACZC,GAAkC,QAAtBxB,EAAAG,EAAKG,KAAKC,oBAAY,IAAAP,OAAA,EAAtBA,EAAwByB,QAAU,SAC9C,SAAEC,EAAQ,KAAEC,GAASxB,EACrByB,EAAkBzB,EAAKoB,eAAeM,WAE5C,OACElB,EAAAA,cAACmB,EAAAA,EAAM,CAACT,SAAUA,EAAUI,MAAOD,GACjCb,EAAAA,cAACoB,EAAAA,EAAG,CACFN,MAAOH,EAAKU,YAAYP,MACxBQ,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEpDvB,EAAAA,cAAA,WACEC,UAAU,YACVuB,WAAS,EACTC,SAAS,6BAETzB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAI0B,SAAS,YAAYf,EAAKU,YAAYP,OAC1Cd,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAIW,EAAKU,YAAYM,KACnB3B,EAAAA,cAAA,QAAMC,UAAU,MAAK,KACpBgB,EAAgB,eAIvBjB,EAAAA,cAAA,WACE4B,wBAAyB,CAAEC,OAAQlB,EAAKmB,MACxCJ,SAAS,gBAEX1B,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACEA,EAAAA,cAACZ,EAAAA,EAAG,QAGRY,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,MACE+B,MAAO,CACLC,QAAU,OACVC,SAAW,OACXC,eAAiB,gBACjBC,UAAY,OACZC,QAAS,IAGXpC,EAAAA,cAAA,UACGe,GACCf,EAAAA,cAACqC,EAAAA,KAAI,CAACC,GAAIvB,EAASwB,OAAOC,KAAMC,IAAI,QAAO,KACtC1B,EAASM,YAAYP,QAI9Bd,EAAAA,cAAA,UACGgB,GACChB,EAAAA,cAACqC,EAAAA,KAAI,CAACC,GAAItB,EAAKuB,OAAOC,KAAMC,IAAI,QAC7BzB,EAAKK,YAAYP,MAAM,SAM3B,C","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(relativePath: {eq: \"profile-pic.png\"}) {\n        childImageSharp {\n          gatsbyImageData(layout: FULL_WIDTH)\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const avatar = data?.avatar?.childImageSharp?.gatsbyImageData\n\n  return (\n    <div className=\"bio\">\n      {avatar && (\n        <GatsbyImage\n          image={avatar}\n          alt={author?.name || ``}\n          className=\"bio-avatar\"\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n        />\n      )}\n      {author?.name && (\n        <div className=\"bio-summary\">\n          <p>\n            {author?.summary || null}\n          </p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  const readTimeMinutes = data.markdownRemark.timeToRead\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <div>\n            <p>{post.frontmatter.date}\n              <span className=\"gr\">·</span>\n              {readTimeMinutes} min read\n            </p>\n          </div>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"Do MMMM YYYY\")\n        description\n      }\n      tableOfContents\n      timeToRead\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","_data$avatar","_data$avatar$childIma","data","useStaticQuery","author","site","siteMetadata","avatar","childImageSharp","gatsbyImageData","React","className","GatsbyImage","image","alt","name","imgStyle","borderRadius","summary","_ref","location","post","markdownRemark","siteTitle","title","previous","next","readTimeMinutes","timeToRead","Layout","SEO","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}