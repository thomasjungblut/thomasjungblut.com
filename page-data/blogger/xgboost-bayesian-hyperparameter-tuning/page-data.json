{"componentChunkName":"component---src-templates-blog-post-js","path":"/blogger/xgboost-bayesian-hyperparameter-tuning/","result":{"data":{"site":{"siteMetadata":{"title":"Coding with Thomas"}},"markdownRemark":{"id":"b4dfe3e3-3857-5d8d-9e32-6a82cacebbf7","excerpt":"Hey guys, I just wanted to quickly share how I was optimizing hyperparameters in XGBoost using bayes_opt. It does a k-fold cross validation while optimizing forâ€¦","html":"<p>Hey guys,</p>\n<p>I just wanted to quickly share how I was optimizing hyperparameters in XGBoost using <a href=\"https://github.com/fmfn/BayesianOptimization\">bayes_opt</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> bayes_opt <span class=\"token keyword\">import</span> BayesianOptimization\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>cross_validation <span class=\"token keyword\">import</span> KFold\n<span class=\"token keyword\">import</span> xgboost <span class=\"token keyword\">as</span> xgb\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">xgbCv</span><span class=\"token punctuation\">(</span>train<span class=\"token punctuation\">,</span> features<span class=\"token punctuation\">,</span> numRounds<span class=\"token punctuation\">,</span> eta<span class=\"token punctuation\">,</span> gamma<span class=\"token punctuation\">,</span> maxDepth<span class=\"token punctuation\">,</span> minChildWeight<span class=\"token punctuation\">,</span> subsample<span class=\"token punctuation\">,</span> colSample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>   \n   <span class=\"token comment\"># prepare xgb parameters </span>\n   params <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"objective\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"reg:linear\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"booster\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"gbtree\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"eval_metric\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"mae\"</span><span class=\"token punctuation\">,</span>            \n            <span class=\"token string\">\"tree_method\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'auto'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"silent\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"eta\"</span><span class=\"token punctuation\">:</span> eta<span class=\"token punctuation\">,</span> \n            <span class=\"token string\">\"max_depth\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>maxDepth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"min_child_weight\"</span> <span class=\"token punctuation\">:</span> minChildWeight<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"subsample\"</span><span class=\"token punctuation\">:</span> subsample<span class=\"token punctuation\">,</span> \n            <span class=\"token string\">\"colsample_bytree\"</span><span class=\"token punctuation\">:</span> colSample<span class=\"token punctuation\">,</span>             \n            <span class=\"token string\">\"gamma\"</span><span class=\"token punctuation\">:</span> gamma\n   <span class=\"token punctuation\">}</span>\n   \n   cvScore <span class=\"token operator\">=</span> kFoldValidation<span class=\"token punctuation\">(</span>train<span class=\"token punctuation\">,</span> features<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>numRounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nFolds <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CV score: {:.6f}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>cvScore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n   <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span> <span class=\"token operator\">*</span> cvScore   <span class=\"token comment\"># invert the cv score to let bayopt maximize</span>\n   \n<span class=\"token keyword\">def</span> <span class=\"token function\">bayesOpt</span><span class=\"token punctuation\">(</span>train<span class=\"token punctuation\">,</span> features<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   ranges <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>            \n              <span class=\"token string\">'numRounds'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'eta'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'gamma'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'maxDepth'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'minChildWeight'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'subsample'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'colSample'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span>\n   \n   <span class=\"token comment\"># proxy through a lambda to be able to pass train and features</span>\n   optFunc <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> numRounds<span class=\"token punctuation\">,</span> eta<span class=\"token punctuation\">,</span> gamma<span class=\"token punctuation\">,</span> maxDepth<span class=\"token punctuation\">,</span> minChildWeight<span class=\"token punctuation\">,</span> subsample<span class=\"token punctuation\">,</span> colSample<span class=\"token punctuation\">:</span> xgbCv<span class=\"token punctuation\">(</span>train<span class=\"token punctuation\">,</span> features<span class=\"token punctuation\">,</span> numRounds<span class=\"token punctuation\">,</span> eta<span class=\"token punctuation\">,</span> gamma<span class=\"token punctuation\">,</span> maxDepth<span class=\"token punctuation\">,</span> minChildWeight<span class=\"token punctuation\">,</span> subsample<span class=\"token punctuation\">,</span> colSample<span class=\"token punctuation\">)</span>\n   bo <span class=\"token operator\">=</span> BayesianOptimization<span class=\"token punctuation\">(</span>optFunc<span class=\"token punctuation\">,</span> ranges<span class=\"token punctuation\">)</span>\n   bo<span class=\"token punctuation\">.</span>maximize<span class=\"token punctuation\">(</span>init_points <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> n_iter <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> kappa <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> acq <span class=\"token operator\">=</span> <span class=\"token string\">\"ei\"</span><span class=\"token punctuation\">,</span> xi <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span>\n   \n   bestMAE <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1.0</span> <span class=\"token operator\">*</span> bo<span class=\"token punctuation\">.</span>res<span class=\"token punctuation\">[</span><span class=\"token string\">'max'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'max_val'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n Best MAE found: %f\"</span> <span class=\"token operator\">%</span> bestMAE<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n Parameters: %s\"</span> <span class=\"token operator\">%</span> bo<span class=\"token punctuation\">.</span>res<span class=\"token punctuation\">[</span><span class=\"token string\">'max'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'max_params'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token keyword\">def</span> <span class=\"token function\">kFoldValidation</span><span class=\"token punctuation\">(</span>train<span class=\"token punctuation\">,</span> features<span class=\"token punctuation\">,</span> xgbParams<span class=\"token punctuation\">,</span> numRounds<span class=\"token punctuation\">,</span> nFolds<span class=\"token punctuation\">,</span> target<span class=\"token operator\">=</span><span class=\"token string\">'loss'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  \n   kf <span class=\"token operator\">=</span> KFold<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n_folds <span class=\"token operator\">=</span> nFolds<span class=\"token punctuation\">,</span> shuffle <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n   fold_score<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n   <span class=\"token keyword\">for</span> train_index<span class=\"token punctuation\">,</span> cv_index <span class=\"token keyword\">in</span> kf<span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># split train/validation</span>\n      X_train<span class=\"token punctuation\">,</span> X_valid <span class=\"token operator\">=</span> train<span class=\"token punctuation\">[</span>features<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>as_matrix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>train_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> train<span class=\"token punctuation\">[</span>features<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>as_matrix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>cv_index<span class=\"token punctuation\">]</span>\n      y_train<span class=\"token punctuation\">,</span> y_valid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>train<span class=\"token punctuation\">[</span>target<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>as_matrix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>train_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>train<span class=\"token punctuation\">[</span>target<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>as_matrix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>cv_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      dtrain <span class=\"token operator\">=</span> xgb<span class=\"token punctuation\">.</span>DMatrix<span class=\"token punctuation\">(</span>X_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span> \n      dvalid <span class=\"token operator\">=</span> xgb<span class=\"token punctuation\">.</span>DMatrix<span class=\"token punctuation\">(</span>X_valid<span class=\"token punctuation\">,</span> y_valid<span class=\"token punctuation\">)</span>\n         \n      watchlist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>dtrain<span class=\"token punctuation\">,</span> <span class=\"token string\">'train'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>dvalid<span class=\"token punctuation\">,</span> <span class=\"token string\">'eval'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n      gbm <span class=\"token operator\">=</span> xgb<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span>xgbParams<span class=\"token punctuation\">,</span> dtrain<span class=\"token punctuation\">,</span> numRounds<span class=\"token punctuation\">,</span> evals <span class=\"token operator\">=</span> watchlist<span class=\"token punctuation\">,</span> early_stopping_rounds <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\n      score <span class=\"token operator\">=</span> gbm<span class=\"token punctuation\">.</span>best_score\n      fold_score<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span>                \n\n   <span class=\"token keyword\">return</span> np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>fold_score<span class=\"token punctuation\">)</span></code></pre></div>\n<p>It does a k-fold cross validation while optimizing for stable parameters.<br>\nKeep in mind that <code class=\"language-text\">bayes_opt</code> maximizes the objective function, so change all the required hardcoded values along those lines to fit your problem. Itâ€™s pretty compact, so I thought I just leave it here for your convenience as a <a href=\"https://gist.github.com/thomasjungblut/b58d70d260abf0eff1a8c447f3d07389#file-xgb_bayes_opt_cv-py\">gist</a>.</p>\n<p>Cheers,<br>\nThomas</p>","frontmatter":{"title":"XGBoost bayesian hyperparameter tuning with bayes_opt in Python","date":"15th October 2016","description":null},"tableOfContents":"","timeToRead":2},"previous":{"fields":{"slug":"/blogger/xgboost-validation-and-early-stopping/"},"frontmatter":{"title":"XGBoost Validation and Early Stopping in R"}},"next":{"fields":{"slug":"/random/2020-blogging/"},"frontmatter":{"title":"Back to Blogging - 2020 Edition"}}},"pageContext":{"id":"b4dfe3e3-3857-5d8d-9e32-6a82cacebbf7","previousPostId":"542cb632-6a73-5f6c-97fd-9da2eaacba19","nextPostId":"ca1066e6-4031-57ec-b2a4-48e9b069af25"}},"staticQueryHashes":["2270107033","2841359383"],"slicesMap":{}}