{"componentChunkName":"component---src-templates-blog-post-js","path":"/blogger/profiling-apache-hama-bsps/","result":{"data":{"site":{"siteMetadata":{"title":"Coding with Thomas"}},"markdownRemark":{"id":"40fc313d-e6e5-5482-a6e1-b6958af58bf4","excerpt":"Hi all, sometimes you aren’t aware of why your application is performing slow or slower than before and you need a profiler to know in which methods the most…","html":"<p>Hi all,</p>\n<p>sometimes you aren’t aware of why your application is performing slow or slower than before and you need a profiler to know in which methods the most time is spent.</p>\n<p><strong>Which profiler should I use?</strong></p>\n<p>That depends on your needs, I prefer <a href=\"http://www.yourkit.com/\">YourKit</a>. It has a fairly good thread monitoring and cool inspectations. Most of the time I’m searching for memory leaks or why a thread has deadlocked, so this profiler is a very helpful tool for these cases.</p>\n<p>This time we are focussing on the profiling of a BSP method / class. Or: How you can profile your own Hama application inside of a cluster.</p>\n<p>In my case I’m using VM’s with Ubuntu, and Windows 7 on my host machine. This might be a common setup. YourKit itself is written in Java and it can be executed on Unix as well.<br>\nWe are going to start the application with the profiler agent and tunnel the profiler port with Putty to our host machine: in my case Windows.</p>\n<p>Let’s go!</p>\n<ol>\n<li>Download Yourkit <a href=\"http://www.yourkit.com/download/index.jsp\">here</a></li>\n<li>Install Yourkit and <a href=\"http://www.chiark.greenend.org.uk/%7Esgtatham/putty/download.html\">Putty</a> (if you’re running windows, otherwise you can just use your shell) on your host machine.</li>\n<li>Download Yourkit for the server machine and untar it</li>\n<li>Look for the shared object (libyjpagent.so) in the yjp-9.5.5/bin/linux-x86-32 directory. Note: Make sure you pick the right version for your JVM. 32 bit if you aren’t sure, 64 bit else.</li>\n<li>Copy it under a path that is more readable like “/usr/local/yk/libyjpagent.so”</li>\n</ol>\n<p>Now is YourKit setup properly and we have to set the agent to the Hama configuration on the BSPMaster.<br>\nLook into your “hama-site.xml” and if the property key “bsp.child.java.opts” isn’t set yet, you have to override it with that:</p>\n<blockquote>\n<p> <property><br>\n<name>bsp.child.java.opts</name><br>\n<value>-Xmx1024m -agentpath:/usr/local/yk/libyjpagent.so</value><br>\n</property></p>\n</blockquote>\n<p>Sure you’ll have to replace the agentpath with the path you copy your shared object to. Make sure you have chown’d it with the user that runs Hama. Note: The heap limit is just a copy of the default value in hama-default.xml. Anything configured in hama-default.xml will be overridden by the hama-site.xml configuration parameters.</p>\n<p>Now you have to make sure that this libyjpagent.so is on EVERY machine on your cluster. Hama currently can’t just let a few tasks start with the profiler (Like Hadoop), you’ll have to provide this for every groom.</p>\n<p>If this is working, you can just start DFS, start BSPMaster and the agent will be started within. You can see this in your groom’s log by an entry like this:</p>\n<blockquote>\n<p>2011-04-22 17:45:53,104 INFO org.apache.hama.bsp.TaskRunner: attempt_201104221744_0001_000001_0 [YourKit Java Profiler 9.5.5] Loaded. Log file: /home/hadoop/.yjp/log/1864.log</p>\n</blockquote>\n<p>Don’t forget to take a look into the log file to determine on which port the agent is broadcasting information. This is necassary for the remote connection of Putty.<br>\nIn every cases yourkit will test your ports by starting with 10000, if its blocked, it picks 10001 and so on.<br>\nIn the log you should see something equal to this:</p>\n<blockquote>\n<p>[YourKit Java Profiler 9.5.5] [0.539]: Profiler agent is listening on port <strong>10001</strong></p>\n</blockquote>\n<p>Ok now we have to setup our Putty on our Windows system.<br>\nEnter all your information on the Session tab: like the hostname of the BSPMaster. In my case this is <a href=\"mailto:thomasjungblut@192.168.56.102\">thomasjungblut@192.168.56.102</a> and port 22.</p>\n<p>Now switch to the Connection->SSH->Tunnels tab and add a new tunnel.<br>\nFor port 10001 it will be:<br>\nSourceport 10001, Destination raynor:10001, Local and Auto.<br>\nThe destination host:port pair is the host:port of your BSPMaster.</p>\n<p>Now open up the session, login and the profiling data will be tunneled over this port.</p>\n<p>Inside of YourKit you’ll have to click: “Connect to remote application” and enter localhost:10001 (or the other port if YourKit gave you another).<br>\nCongratulations, you connected to your running application inside of your cluster.</p>\n<p>Just a tip if you are profiling Hama. You’ll have to deactivate the apache.org filter under Settings->Filter. Otherwise every method call will be filtered. BUT if you just want your own application to profile, this is just noise of the framework. So you can filter it.</p>\n<p>Good luck and have fun!</p>","frontmatter":{"title":"Profiling Apache Hama BSP's","date":"23rd April 2011","description":null},"tableOfContents":"","timeToRead":3},"previous":{"fields":{"slug":"/blogger/apache-hama-network-throughput/"},"frontmatter":{"title":"Apache Hama network throughput"}},"next":{"fields":{"slug":"/blogger/google-summer-of-code/"},"frontmatter":{"title":"Google Summer of Code"}}},"pageContext":{"id":"40fc313d-e6e5-5482-a6e1-b6958af58bf4","previousPostId":"aba86902-77ac-5770-b07f-6a3d23711170","nextPostId":"32875d1c-96d6-50c5-9efa-04374a9ff7ad"}},"staticQueryHashes":["2270107033","2841359383"],"slicesMap":{}}